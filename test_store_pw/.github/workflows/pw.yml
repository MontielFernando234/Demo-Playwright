name: Playwright Tests with Allure Report

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
      fail-fast: false
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps ${{ matrix.browser }}
    
    - name: Run Playwright tests
      run: npx playwright test --project=${{ matrix.browser }} --reporter=line,allure-playwright
      continue-on-error: true
      
    - name: Generate report
      run: allure generate ./allure-results -o ./allure-report --single-report

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-results-${{ matrix.browser }}
        path: allure-results/
        retention-days: 30
    
    - name: Upload Playwright report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.browser }}
        path: playwright-report/
        retention-days: 30

  generate-report:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Merge allure results
      run: |
        mkdir -p allure-results
        find artifacts -name "allure-results-*" -type d -exec cp -r {}/* allure-results/ \;
    
    - name: Generate Allure Report
      uses: simple-elf/allure-report-action@master
      if: always()
      with:
        allure_results: allure-results
        allure_report: allure-report
        gh_pages: gh-pages
        allure_history: allure-history
    
    - name: Upload Allure report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-report
        path: allure-report/
        retention-days: 30
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: allure-report
        destination_dir: reports/${{ github.run_number }}
    
    - name: Add comment to PR with report link
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request' && always()
      with:
        script: |
          const runNumber = context.runNumber;
          const repoName = context.repo.repo;
          const owner = context.repo.owner;
          const reportUrl = `https://${owner}.github.io/${repoName}/reports/${runNumber}/`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `üé≠ **Playwright Test Results**\n\nüìä [View Allure Report](${reportUrl})\n\n*Report will be available in a few minutes after deployment completes.*`
          });

  notify:
    needs: [test, generate-report]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify test results
      run: |
        if [ "${{ needs.test.result }}" == "success" ]; then
          echo "‚úÖ All tests passed successfully!"
        elif [ "${{ needs.test.result }}" == "failure" ]; then
          echo "‚ùå Some tests failed. Check the Allure report for details."
        else
          echo "‚ö†Ô∏è Tests completed with issues. Check the logs."
        fi