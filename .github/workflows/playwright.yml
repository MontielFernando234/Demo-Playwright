name: Playwright Tests
on: 
  push:
  pull_request:
  workflow_dispatch:

# Permisos necesarios para GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Solo permitir una ejecuciÃ³n concurrente de deploy
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'
        cache-dependency-path: './test_store_pw/package-lock.json'
    
    - name: Install dependencies
      run: |
        cd test_store_pw
        npm ci
    
    - name: Install Playwright Browsers
      run: |
        cd test_store_pw
        npx playwright install --with-deps
    
    - name: Run Playwright tests
      run: |
        cd test_store_pw
        npx playwright test --project=chromium --reporter=allure-playwright
      continue-on-error: true
    
    - name: Install Allure CLI and Generate report
      run: |
        npm install -g allure-commandline
        cd test_store_pw
        allure generate ./allure-results -o ./allure-report --single-file
      if: always()
    
    - name: Upload allure report artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-report
        path: test_store_pw/allure-report/
        retention-days: 7
    
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      if: always()
      with:
        path: test_store_pw/allure-report/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
    
    - name: Comment PR with report link
      uses: actions/github-script@v7
      if: github.event_name == 'pull_request' && always()
      with:
        script: |
          const reportUrl = '${{ steps.deployment.outputs.page_url }}';
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `ðŸŽ­ **Playwright Test Results**\n\nðŸ“Š [Ver Reporte de Allure](${reportUrl})\n\n*El reporte estarÃ¡ disponible en unos minutos.*`
          });
    
    - name: Output report URL
      run: |
        echo "ðŸŽ‰ Reporte desplegado en: ${{ steps.deployment.outputs.page_url }}"
