name: Playwright Tests - Smart with Github Pages
on: 
  push:
    branches-ignore: [main]  # Cualquier rama excepto main
  pull_request:
    branches: [main]         # Solo PRs hacia main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      run-all: ${{ steps.decision.outputs.run-all }}
      test-files: ${{ steps.decision.outputs.test-files }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Detect changed files and decide strategy
      id: decision
      run: |
        echo "🔍 Analyzing changes..."
        
        if [ "${{ github.event_name }}" = "pull_request" ]; then
          echo "🔄 PR to main - Running ALL tests"
          echo "run-all=true" >> $GITHUB_OUTPUT
          echo "test-files=" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        # Para push a otras ramas, detectar cambios específicos
        CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
        echo "Changed files: $CHANGED_FILES"
        
        # Si cambió configuración → todo
        if echo "$CHANGED_FILES" | grep -E "(playwright.config|package\.json|\.github/workflows)"; then
          echo "⚙️ Config changed - Running ALL tests"
          echo "run-all=true" >> $GITHUB_OUTPUT
          echo "test-files=" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        # Detectar tests específicos que cambiaron
        CHANGED_TESTS=""
        
        if echo "$CHANGED_FILES" | grep -q "test_store_pw/tests/cart/"; then
          CHANGED_TESTS="$CHANGED_TESTS test_store_pw/tests/cart/"
        fi
        
        if echo "$CHANGED_FILES" | grep -q "test_store_pw/tests/checkout/"; then
          CHANGED_TESTS="$CHANGED_TESTS test_store_pw/tests/checkout/"
        fi
        
        if echo "$CHANGED_FILES" | grep -q "test_store_pw/tests/login/"; then
          CHANGED_TESTS="$CHANGED_TESTS test_store_pw/tests/login/"
        fi
        
        if echo "$CHANGED_FILES" | grep -q "test_store_pw/tests/products/"; then
          CHANGED_TESTS="$CHANGED_TESTS test_store_pw/tests/products/"
        fi
        
        # Si cambió algo en support/, pages/, actions/ → ejecutar todo
        if echo "$CHANGED_FILES" | grep -E "(support/|pages/|actions/)"; then
          echo "🔧 Core files changed - Running ALL tests"
          echo "run-all=true" >> $GITHUB_OUTPUT
          echo "test-files=" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        if [ -n "$CHANGED_TESTS" ]; then
          echo "🎯 Running specific tests: $CHANGED_TESTS"
          echo "run-all=false" >> $GITHUB_OUTPUT
          echo "test-files=$CHANGED_TESTS" >> $GITHUB_OUTPUT
        else
          echo "🤷 No relevant changes - Running login tests as smoke"
          echo "run-all=false" >> $GITHUB_OUTPUT
          echo "test-files=test_store_pw/tests/login/" >> $GITHUB_OUTPUT
        fi

  test:
    needs: detect-changes
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'
        cache-dependency-path: './test_store_pw/package-lock.json'
    
    - name: Install dependencies
      run: |
        cd test_store_pw
        npm ci
    
    - name: Install Playwright Browsers
      run: |
        cd test_store_pw
        npx playwright install --with-deps
    
    - name: Run All Tests
      if: needs.detect-changes.outputs.run-all == 'true'
      run: |
        cd test_store_pw
        echo "🚀 Running FULL test suite"
        npx playwright test --project=chromium --reporter=allure-playwright
      continue-on-error: true
    
    - name: Run Specific Tests
      if: needs.detect-changes.outputs.run-all == 'false'
      run: |
        cd test_store_pw
        echo "🎯 Running specific tests: ${{ needs.detect-changes.outputs.test-files }}"
        npx playwright test ${{ needs.detect-changes.outputs.test-files }} --project=chromium --reporter=allure-playwright
      continue-on-error: true
    
    - name: Generate Allure report
      run: |
        npm install -g allure-commandline
        cd test_store_pw
        allure generate ./allure-results -o ./allure-report --single-file
      if: always()
    
    - name: Upload report artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: allure-report
        path: test_store_pw/allure-report/
        retention-days: 7
    
    # Solo deployar a Pages si es PR a main
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      if: always() && github.event_name == 'pull_request'
      with:
        path: test_store_pw/allure-report/

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' #always() && github.event_name == 'pull_request'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
    
    - name: Comment on PR
      uses: actions/github-script@v7
      with:
        script: |
          const reportUrl = '${{ steps.deployment.outputs.page_url }}';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## 🎭 Playwright Test Results - Full Suite
          📊 **[Ver Reporte Completo](${reportUrl})**
          *Suite completa ejecutada por ser PR a main*`
          });

  notify-push:
    needs: [detect-changes, test]
    runs-on: ubuntu-latest
    if: always() && github.event_name == 'push'
    steps:
    - name: Notify push results
      run: |
        if [ "${{ needs.detect-changes.outputs.run-all }}" = "true" ]; then
          echo "🔄 Full suite completed for config changes"
        else
          echo "🎯 Selective tests completed: ${{ needs.detect-changes.outputs.test-files }}"
        fi
        
        if [ "${{ needs.test.result }}" = "success" ]; then
          echo "✅ All tests passed!"
        else
          echo "❌ Some tests failed. Check artifacts for details."
        fi
